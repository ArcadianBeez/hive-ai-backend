{
  "sql_structure": "create table prod.orders\n(\n    id                      int unsigned auto_increment\n        primary key,\n    user_id                 int unsigned                  not null,\n    order_status_id         int(2) unsigned               not null,\n    tax                     double(5, 2) default 0.00     not null,\n    hint                    text                          not null,\n    created_at              timestamp                     null,\n    updated_at              timestamp                     null,\n    payment_id              int unsigned                  null,\n    delivery_address_id     int unsigned                  null,\n    whatever_address_id     int unsigned                  null,\n    driver_id               int unsigned                  null,\n    delivery_price          double(8, 2)                  not null,\n    bees_commision_type     varchar(20)                   not null,\n    bees_commision_value    double(8, 2)                  not null,\n    billing_information_id  int unsigned default 149      null,\n    comment_cancellation_id int unsigned                  null,\n    order_address_id        int unsigned                  null,\n    restaurant_id           int unsigned                  null,\n    delivery_discount       double(8, 2) default 0.00     null,\n    preparation_time        int          default 0        null,\n    type                    varchar(10)  default 'NORMAL' null,\n    additional_transfer     double(5, 2) default 0.00     null,\n    products_discount       double(5, 2) default 0.00     null,\n    cutlery                 int(1)       default 0        null,\n    wallet_value            double(5, 2) default 0.00     null,\n    received                smallint     default 0        null,\n    back_money              double(5, 2) default 0.00     null,\n    app_version             varchar(50)                   null comment 'Know which version the client has',\n    constraint orders_user_id_foreign\n        foreign key (user_id) references prod.users (id)\n)\n    collate = utf8mb4_unicode_ci\n    row_format = DYNAMIC;\n\ncreate index order_restaurant_id_foreign\n    on prod.orders (restaurant_id);\n\ncreate index orders_billing_information_id_foreign\n    on prod.orders (billing_information_id);\n\ncreate index orders_comment_cancellation_id_foreign\n    on prod.orders (comment_cancellation_id);\n\ncreate index orders_delivery_address_id_foreign\n    on prod.orders (delivery_address_id);\n\ncreate index orders_driver_id_foreign\n    on prod.orders (driver_id);\n\ncreate index orders_order_address_id_foreign\n    on prod.orders (order_address_id);\n\ncreate index orders_order_status_id_foreign\n    on prod.orders (order_status_id);\n\ncreate index orders_payment_id_foreign\n    on prod.orders (payment_id);\n\ncreate index orders_user_id_index\n    on prod.orders (user_id);\n\ncreate index orders_whatever_address_id_foreign\n    on prod.orders (whatever_address_id);\n\n",
  "description": "consider that order_status_id is 2 recived 3 preparing 4 ready 5 on the way 6 delivered or completed 7 canceled, JOIN with restaurants and users for get names"
}